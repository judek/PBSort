<SortDef>
  <!--A field reordered of the UAAC file-->
  <InputFileName>UAA_RED.CNV.TXT</InputFileName>

  <!--The resultant sorted file which will be used for the look ups-->
  <OutputFileName>UAA_RED.CNV.SRT.TXT</OutputFileName>


  <CharacterSet>ASCII</CharacterSet>
  <!--ASCII, Unicode (currently the only char set supported is 8 bit US ASCII )-->

  <RecordType>FixedLength</RecordType>
  <!--CSV, FixedLength (CSV sorting has not yet been implemented)-->
  <RecordLength>175</RecordLength>
  <!--Number characters or byte each record is excluding and termination-->
  <Termination>CRLF</Termination>
  <!--None, CRLF -->


  <!--FOR UAAC We are sorting the a key at the begining of each record which is 42 characters long-->
  <!--the first 5 characters of the Zip, first 11 characters of the address, first 20 characters of the last name, and 6 character of the first Name-->
  <!-- <SortDefinition>1:42</SortDefinition> -->
  
  <!--the Data file has been rearraged by the generic process to get the above fields in that order-->
  
  <!--the first 5 characters of the Zip, first 30 characters of the address, first 20 characters of the last name, and 15 character of the first Name-->
  <SortDefinition>1:70</SortDefinition>


  <!--Memory cap is the size in bytes how much to read and sort at a time.  The more it can read the faster it can sort very large files-->
  <!--Ideally this value should not be specifed and PBSort will automatically determine the best memory cap for system at run time-->


  <!--Use this section carefully as it will effect performance-->
  <!--In some cases you may want to limit the memory used by PBSort so it will not burden other programs running on this system-->
  <!--<MemoryCap>0</MemoryCap>-->


</SortDef>
